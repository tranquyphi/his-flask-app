@staff_bp.route('/staff/<int:staff_id>/department', methods=['POST'])
def assign_department(staff_id):
    """Assign staff to a department"""
    try:
        # Check if staff exists
        staff = Staff.query.get(staff_id)
        if not staff:
            return jsonify({'error': 'Staff not found'}), 404
            
        data = request.json
        department_id = data.get('DepartmentId')
        position = data.get('Position')
        
        # Check if department exists
        department = Department.query.get(department_id)
        if not department:
            return jsonify({'error': 'Department not found'}), 404
            
        # Get current assignment if any
        current_assignment = StaffDepartment.query.filter_by(
            StaffId=staff_id,
            Current=True
        ).first()
        
        # If there's a current assignment
        if current_assignment:
            # If department is the same, just update position if provided
            if current_assignment.DepartmentId == department_id:
                if position:
                    current_assignment.Position = position
                    
                db.session.commit()
                return jsonify({
                    'message': 'Department assignment updated successfully',
                    'departmentId': department_id,
                    'departmentName': department.DepartmentName
                })
            else:
                # Set current assignment to inactive
                current_assignment.Current = False
        
        # Create new department assignment
        new_assignment = StaffDepartment(
            StaffId=staff_id,
            DepartmentId=department_id,
            Position=position,
            Current=True
        )
        
        db.session.add(new_assignment)
        db.session.commit()
        
        return jsonify({
            'message': 'Department assignment updated successfully',
            'departmentId': department_id,
            'departmentName': department.DepartmentName
        })
    except Exception as e:
        db.session.rollback()
        return jsonify({'error': str(e)}), 500
